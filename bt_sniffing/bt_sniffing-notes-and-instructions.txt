Installs:
(N) BlueZero    https://pypi.org/project/bluezero/      (pip3 install bluezero)
(Y) Tshark      https://tshark.dev/setup/install/       (sudo apt-get install tshark)       (sudo apt-get install wireshark-cli)
(Y) PyShark     https://pypi.org/project/pyshark/       (pip3 install pyshark)
(Y) TCPDump     https://www.tcpdump.org/                (sudo apt-get install tcpdump)
    tcpdump man page:   https://www.tcpdump.org/manpages/tcpdump.1.html
(N) pcapy       https://pypi.org/project/pcapy/         (pip3 install pcapy)
    pcapy man page:     https://rawgit.com/CoreSecurity/pcapy/master/pcapy.html

Using BlueZero (hciconfig, hcitool, sdptool, gatttool):
https://www.hackers-arise.com/bluetooth-reconnaissance

Give the Bluetooth device a name
Enable page and inquiry scanning and make the Bluetooth device discoverable:
https://github.com/EnableTech/raspberry-bluetooth-demo
> sudo hciconfig hci0 name '<device_name>'
> sudo hciconfig hci0 piscan

Check interfaces that tcpdump can capture from
https://www.agnosticdev.com/content/how-capture-bluetooth-traffic-tcpdump-linux
> tcpdump -D
We will assume the interface "bluetooth0" exists

Dump packets into a test file
-G 15 ... Occurs every 15 seconds (when a packet is received)
-W 1  ... creates 1 file before exiting
-w    ... write output to a file
When -G and -w are used together, the filename may take on the time the dump started
https://stackoverflow.com/questions/25731643/how-to-schedule-tcpdump-to-run-for-a-specific-period-of-time
> tcpdump -G 15 -W 1 -w test_%Y-%m-%d_%H-%M-%S.pcap -i bluetooth0

Since the Bluetooth module included on the Raspberry Pi 4 model B does not support monitor/promiscuous mode,
this proof of concept will only get packets from a Bluetooth device that is attempting to connect to the RPi.
Wireshark recommends using an Ubertooth module for promiscuous scanning
https://gitlab.com/wireshark/wireshark/-/wikis/CaptureSetup/Bluetooth

Use tshark to convert the PCAP file into a more readable TXT file
https://lynxbee.com/capture-and-analyze-network-packets-using-tcpdump-and-tshark/
> tshark -r [filename].pcap -V > [filename]_Processed.txt